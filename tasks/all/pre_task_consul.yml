---
- name: consul | render consul service
  set_fact:
    consul_service_render: |
      - name: "{{ identity }}"
      - name: "{{ identity }}-all"
        checks:
      {% if cluster_role == 'master' %}
          - args: ["/opt/consul/bin/etcd-consul-check", "--ca=/etc/kubernetes/pki/etcd/ca.crt", "--cert-file=/opt/consul/pki/etcd/{{ ansible_hostname }}-consul.pem", "--key=/opt/consul/pki/etcd/{{ ansible_hostname }}-consul-key.pem"]
            interval: "10s"
      {% endif %}
      {% if cluster_role == 'master' %}
          - args: ["/opt/consul/bin/kubernetes-check-node"]
            interval: "30s"
          - tcp: localhost:6443
            interval: 10s
            timeout: 3s
          - tcp: localhost:10251
            interval: 10s
            timeout: 3s
          - tcp: localhost:10252
            interval: 10s
            timeout: 3s
      {% endif %}
          - tcp: localhost:10250
            interval: 10s
            timeout: 1s
          - http: http://localhost:10248/healthz
            method: "GET"
            interval: 30s
            timeout: 5s
          - tcp: localhost:10256
            interval: 10s
            timeout: 1s
      {% if cluster_role == 'master' %}
      - name: "{{ cluster_name }}-kube-master"
        checks:
          - args: ["/opt/consul/bin/kubernetes-check-node"]
            interval: "30s"
      - name: "{{ cluster_name }}-kube-apiserver"
        check:
          - tcp: localhost:6443
            interval: 10s
            timeout: 3s
      - name: "{{ cluster_name }}-kube-scheduler"
        check:
          - tcp: localhost:10251
            interval: 10s
            timeout: 3s
      - name: "{{ cluster_name }}-kube-controller-manager"
        check:
          - tcp: localhost:10252
            interval: 10s
            timeout: 3s
      {% endif %}
      {% if cluster_role == 'master' %}
      - name: "{{ cluster_name }}-kubelet"
        check:
          - tcp: localhost:10250
            interval: 10s
            timeout: 1s
      - name: "{{ cluster_name }}-kubelet-health"
        check:
          - http: http://localhost:10248/healthz
            method: "GET"
            interval: 30s
            timeout: 5s
      - name: "{{ cluster_name }}-kube-proxy"
        check:
          - tcp: localhost:10256
            interval: 10s
            timeout: 1s
      - name: "{{ cluster_name }}-etcd"
        check:
          - args: ["/opt/consul/bin/etcd-consul-check", "--ca=/etc/kubernetes/pki/etcd/ca.crt", "--cert-file=/opt/consul/pki/etcd/{{ ansible_hostname }}-consul.pem", "--key=/opt/consul/pki/etcd/{{ ansible_hostname }}-consul-key.pem"]
            interval: "10s"
      {% endif %}
      {% if node == 'true' %}
      - name: "{{ cluster_name }}-kube-node"
      {% endif %}

- name: consul | render consul watches
  set_fact:
    consul_watches_render: |
      - type: "keyprefix"
        prefix: "{{ cluster_name }}/.cleanup"
        args:
      {% if etcd == 'true' or master == 'true' %}
          - "/opt/consul/bin/kubernetes-scripts/cleanup"
      {% else %}
          - "/bin/true"
      {% endif %}
      - type: "key"
        key: "{{ cluster_name }}/.deploy/start"
        args:
      {% if master == 'true' %}
          - "/opt/consul/bin/kubernetes-scripts/deploy"
      {% else %}
          - "/bin/true"
      {% endif %}

- name: consul | render consul metas
  set_fact:
    consul_node_meta_render: |
      image: "{{ image }}"
      {% if provider == "openstack" %}
      flavor: "{{ flavor }}"
      {% elif provider == "vsphere" %}
      cpus: "{{ cpus }}"
      memory: "{{ memory }}"
      {% endif %}

- name: consul | convert from string to service object
  set_fact:
    consul_service: "{{ consul_service_render | from_yaml }}"

- name: consul | convert from string to watches object
  set_fact:
    consul_watches: "{{ consul_watches_render | from_yaml }}"

- name: consul | convert from string to watches object
  set_fact:
    consul_node_meta: "{{ consul_node_meta_render | from_yaml }}"

- name: consul | set some facts from env
  set_fact:
    consul_encrypt: "{{ lookup('env', 'CONSUL_ENCRYPT') }}"
    consul_datacenter: "{{ lookup('env', 'CONSUL_DATACENTER') }}"
    consul: "{{ lookup('env', 'CONSUL') }}"

- name: consul | start consul role
  include_role:
    name: entercloudsuite.consul
    public: yes
  vars:
    configure: true
    install: false
    consul_service_status: "started"
    consul_version: 1.4.4
    consul_config_validate: "{{ consul_user_home }}/bin/consul validate -config-format=json %s"
    consul_configs:
      main:
        bind_addr: "{{ ansible_default_ipv4['address'] }}"
        client_addr: 0.0.0.0
        node_name: "{{ ansible_hostname }}"
        data_dir: "{{ consul_data_dir }}"
        encrypt: "{{ consul_encrypt }}"
        datacenter: "{{ consul_datacenter }}"
        enable_syslog: true
        server: false
        ui: true
        enable_script_checks: true
        services: "{{ consul_service }}"
        watches: "{{ consul_watches }}"
        rejoin_after_leave: true
        node_meta: "{{ consul_node_meta }}"
        retry_join:
          - "{{ consul }}"
