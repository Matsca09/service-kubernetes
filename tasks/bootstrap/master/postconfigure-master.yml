---
- name: bootstrap | master | copy autoscaler-restart script
  template:
    src: autoscaler/autoscaler-restart.sh.j2
    dest: /usr/local/bin/kubernetes-scripts/autoscaler-restart
    mode: 0775

- name: bootstrap | master | save kubeconfig in base64
  set_fact:
    kubeconfig64: "{{ lookup('file', '/etc/kubernetes/admin.conf') | b64encode }}"

- name: bootstrap | master | render automium-cluster-autoscaler.cm.yml
  template:
    src: autoscaler/automium-cluster-autoscaler.cm.yml.j2
    dest: /usr/src/cloud/automium-cluster-autoscaler.cm.yml

- name: bootstrap | master | copy automium-cluster-autoscaler.yml
  copy:
    src: autoscaler/automium-cluster-autoscaler.yml
    dest: /usr/src/cloud/automium-cluster-autoscaler.yml

- name: bootstrap | master | apply autoscaler config map and deployment
  shell: |
    kubectl apply -f /usr/src/cloud/automium-cluster-autoscaler.cm.yml
    kubectl apply -f /usr/src/cloud/automium-cluster-autoscaler.yml
  when: testmode != "true"

- name: bootstrap | master | run script to add kubernetes to Rancher
  shell: |
    #!/bin/sh
    RANCHER_URL="{{ rancher_url }}"
    RANCHER_CLUSTER_TOKEN="{{ rancher_cluster_token }}"
    export CLUSTER_NAME="{{ cluster_name }}"
    CLUSTER_ID=$(curl -sS -k -H "Content-Type: application/json" -H "Authorization: Bearer ${RANCHER_CLUSTER_TOKEN}" "https://${RANCHER_URL}/v3/cluster" --data-binary "{\"dockerRootDir\":\"/var/lib/docker\",\"enableNetworkPolicy\":false,\"type\":\"cluster\",\"name\":\"$CLUSTER_NAME\"}" | jq '.id' | tr -d "\"")
    if [ "${CLUSTER_ID}" != "null" ]; then
        echo "Cluster created with ID ${CLUSTER_ID} -- waiting for manifest generation..."
        sleep 5
        APPLY_URL=$(curl -sS -k -H "Content-Type: application/json" -H "Authorization: Bearer ${RANCHER_CLUSTER_TOKEN}" "https://${RANCHER_URL}/v3/clusterregistrationtoken" --data-binary "{\"type\":\"clusterRegistrationToken\",\"clusterId\":\"${CLUSTER_ID}\"}" | jq '.manifestUrl' | tr -d "\"")
        if [ "${APPLY_URL}" != "null" ]; then
            echo "Manifest URL: ${APPLY_URL}"
            curl -sS -k ${APPLY_URL} | kubectl apply -f -
        fi
    fi
  register: rancher_add
  until: rancher_add.rc == 0
  delay: 1
  retries: 6000
  when:
    - rancher_url != ""
    - rancher_cluster_token != ""

- include_tasks: tasks/helpers/generate_certificate.yml
  vars:
    delegate_host_for_cert_generations: "127.0.0.1"
    cert_path: "/root/prometheus_cert"
    cert_name: "prometheus"
    cfssl_conf:
      profile: "client"
      path_ca: "/etc/kubernetes/pki/etcd/ca.crt"
      path_key: "/etc/kubernetes/pki/etcd/ca.key"
      path_config: "/etc/cfssl/etcd/certificate.json"
    server_conf:
      CN: Server
      hosts:
        - 127.0.0.1
        - localhost
        - "{{ ansible_hostname }}"
        - "{{ ansible_fqdn }}"
        - "{{ cluster_name }}-etcd.service.automium.consul"
      key:
        algo: rsa
        size: 2048
