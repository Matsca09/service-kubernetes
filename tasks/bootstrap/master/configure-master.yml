---
- name: bootstrap | configure master | kubeadm --> render configuration
  template:
    src: templates/kubeadm/kubeadm.master.init.yml.j2
    dest: "/etc/kubernetes/kubeadm-conf.yml"
    owner: root
    group: root
    mode: 0600

- name: bootstrap | configure master | OS create "{{ cluster_name }}-kube-apiserver.service.automium.consul" record in /etc/hosts for consul boostrap
  lineinfile:
    state: present
    path: /etc/hosts
    line: "{{ ansible_default_ipv4['address'] }} {{ cluster_name }}-kube-apiserver.service.automium.consul"
  when:
    - testmode != "true"

- name: bootstrap | configure master | create "{{ cluster_name }}-kube-apiserver.service.automium.consul" record in /etc/hosts for consul boostrap in test mode
  lineinfile:
    state: present
    path: /etc/hosts
    line: "{{ ansible_default_ipv4['address'] }} {{ cluster_name }}-kube-apiserver.service.automium.consul"
    unsafe_writes: yes
  when:
    - testmode == "true"

- name: bootstrap | configure master | compose kubeadm bootstrap command
  set_fact:
    kubeadm_bootstrap_command: "kubeadm init --config /etc/kubernetes/kubeadm-conf.yml --upload-certs"

- name: bootstrap | configure master | add preflight ignore in test
  set_fact:
    kubeadm_bootstrap_command: "{{ kubeadm_bootstrap_command }} --ignore-preflight-errors=all"
  when:
    - testmode == "true"

- name: bootstrap | configure master | bootstrap first master
  command: "{{ kubeadm_bootstrap_command }}"
  register: kubeadm_upload_cert

- name: bootstrap | configure master | certs calico | Create directory tree
  file:
    state: directory
    dest: "{{ item }}"
  with_items:
    - /etc/cfssl
    - /etc/cfssl/etcd/

- name: bootstrap | configure master | certs calico | set vars wit calico configurations
  set_fact:
    calico_conf:
      signing:
        default:
          expiry: 43800h
        profiles:
          client:
            expiry: 43800h
            usages:
              - signing
              - digital signature
              - key encipherment
              - client auth

- name: bootstrap | configure master | certs calico | Copy calico cert conf to file
  copy:
    content: "{{ calico_conf | to_json }}"
    dest: /etc/cfssl/etcd/certificate.json

- include_tasks: helpers/generate_certificate.yml
  vars:
    delegate_host_for_cert_generations: "{{ ansible_hostname }}"
    cert_path: /etc/calico/pki
    cert_name: "node-calico"
    cfssl_conf:
      profile: "client"
      path_ca: "/etc/kubernetes/pki/etcd/ca.crt"
      path_key: "/etc/kubernetes/pki/etcd/ca.key"
      path_config: "/etc/cfssl/etcd/certificate.json"
    server_conf:
      CN: Server
      hosts:
        - 127.0.0.1
        - localhost
        - "{{ ansible_hostname }}"
        - "{{ ansible_fqdn }}"
      key:
        algo: rsa
        size: 2048

- name: debug
  debug:
    var: kubeadm_custom_row

- name: bootstrap | configure master | create psp-deplotyment default-psp-with-rbac
  copy:
    src: default-psp-with-rbac.yaml
    dest: /etc/kubernetes/default-psp-with-rbac.yaml
    owner: root
    group: root
    mode: 0644
  when: 
    - kubeadm_custom_row.apiServer.extraArgs.enable-admission-plugins is defined
    - '"PodSecurityPolicy" in kubeadm_custom_row.apiServer.extraArgs.enable-admission-plugins'

- name:  bootstrap | configure master | deploy psp-deplotyment default-psp-with-rbac.yaml
  k8s:
    state: present
    kubeconfig: /etc/kubernetes/admin.conf
    src: /etc/kubernetes/default-psp-with-rbac.yaml
  when: 
    - kubeadm_custom_row.apiServer.extraArgs.enable-admission-plugins is defined
    - '"PodSecurityPolicy" in kubeadm_custom_row.apiServer.extraArgs.enable-admission-plugins'

- name: bootstrap | configure master | create psp-deplotyment privileged-psp-with-rbac.yaml
  copy:
    src: privileged-psp-with-rbac.yaml
    dest: /etc/kubernetes/privileged-psp-with-rbac.yaml
    owner: root
    group: root
    mode: 0644
  when: 
    - kubeadm_custom_row.apiServer.extraArgs.enable-admission-plugins is defined
    - '"PodSecurityPolicy" in kubeadm_custom_row.apiServer.extraArgs.enable-admission-plugins'

- name:  bootstrap | configure master | deploy psp-deplotyment privileged-psp-with-rbac.yaml
  k8s:
    state: present
    kubeconfig: /etc/kubernetes/admin.conf
    src: /etc/kubernetes/privileged-psp-with-rbac.yaml
  when: 
    - kubeadm_custom_row.apiServer.extraArgs.enable-admission-plugins is defined
    - '"PodSecurityPolicy" in kubeadm_custom_row.apiServer.extraArgs.enable-admission-plugins'

- name: bootstrap | configure master | deploy calico deployment
  template:
    src: templates/calico/calico.yaml.j2
    dest: /etc/kubernetes/calico.yaml
    owner: root
    group: root
    mode: 0600

- name: bootstrap | configure master | apply calico deployment
  k8s:
    kubeconfig: /etc/kubernetes/admin.conf
    src: /etc/kubernetes/calico.yaml

