---
- name: bootstrap | configure node | make sure the master service is resolvable
  command: "dig +short {{ cluster_name }}-kube-master.service.automium.consul"
  register: resolve_command
  retries: 100
  delay: 3
  until: resolve_command.stdout != ""
  failed_when: resolve_command.stdout == ""

- include_tasks: helpers/generate_calico.yml
  vars:
    delegate_host_for_cert_generations: "{{ cluster_name }}-kube-master.service.automium.consul"
    server_conf:
      CN: Server
      hosts:
        - 127.0.0.1
        - localhost
        - "{{ ansible_hostname }}"
        - "{{ ansible_fqdn }}"
        - "{{ cluster_name }}-etcd.service.automium.consul"
      key:
        algo: rsa
        size: 2048

- name: bootstrap | configure node | generate join token
  command: kubeadm token create --ttl 5m
  delegate_to: "{{ cluster_name }}-kube-master.service.automium.consul"
  register: kubeadm_join_token

- name: bootstrap | configure node | render kubeadm configuration
  template:
    src: templates/kubeadm/kubeadm.node.yml.j2
    dest: "/etc/kubernetes/kubeadm-conf.yml"
    owner: root
    group: root
    mode: 0600

- name: bootstrap | configure node | compose join command
  set_fact:
    join_command: "kubeadm join --config /etc/kubernetes/kubeadm-conf.yml"

- name: bootstrap | configure node | add ignore preflight errors in test mode
  set_fact:
    join_command: "{{ join_command }} --ignore-preflight-errors=all"
  when:
    - testmode == "true"

- name: bootstrap | configure node | DEBUG show join command
  debug:
    var: join_command

- name: bootstrap | configure node | execute the generated join command
  command: "{{ join_command }}"
