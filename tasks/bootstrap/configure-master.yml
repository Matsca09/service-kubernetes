---
- name: bootstrap | all | render kubeadm configuration
  template:
    src: templates/kubeadm/kubeadm.master.yml.j2
    dest: "/etc/kubernetes/kubeadm-conf.yml"
    owner: root
    group: root
    mode: 0600

- name: bootstrap | configure master | create "{{ cluster_name }}-kube-apiserver.service.automium.consul" record in /etc/hosts for consul boostrap
  lineinfile:
    state: present
    path: /etc/hosts
    line: "{{ ansible_default_ipv4['address'] }} {{ cluster_name }}-kube-apiserver.service.automium.consul"
  when:
    - testmode != "true"

- name: bootstrap | configure master | create "{{ cluster_name }}-kube-apiserver.service.automium.consul" record in /etc/hosts for consul boostrap in test mode
  lineinfile:
    state: present
    path: /etc/hosts
    line: "{{ ansible_default_ipv4['address'] }} {{ cluster_name }}-kube-apiserver.service.automium.consul"
    unsafe_writes: yes
  when:
    - testmode == "true"

- name: bootstrap | configure master | compose kubeadm bootstrap command
  set_fact:
    kubeadm_bootstrap_command: "kubeadm init --config /etc/kubernetes/kubeadm-conf.yml --upload-certs"

- name: bootstrap | configure master | add preflight ignore in test
  set_fact:
    kubeadm_bootstrap_command: "{{ kubeadm_bootstrap_command }} --ignore-preflight-errors=all"
  when:
    - testmode == "true"

- name: bootstrap | configure master | bootstrap first master
  command: "{{ kubeadm_bootstrap_command }}"
  register: kubeadm_upload_cert

- include_tasks: helpers/generate_calico.yml
  vars:
    delegate_host_for_cert_generations: "{{ ansible_hostname }}"
    server_conf:
      CN: Server
      hosts:
        - 127.0.0.1
        - localhost
        - "{{ ansible_hostname }}"
        - "{{ ansible_fqdn }}"
      key:
        algo: rsa
        size: 2048

- name: bootstrap | configure master | deploy calico deployment
  template:
    src: templates/calico/calico.yaml.j2
    dest: /etc/kubernetes/calico.yaml
    owner: root
    group: root
    mode: 0700

- name: bootstrap | configure master | apply calico deployment
  command: kubectl --kubeconfig /etc/kubernetes/admin.conf apply -f /etc/kubernetes/calico.yaml
