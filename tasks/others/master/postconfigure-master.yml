---
- name: others | master | postconfigure | check calico version
  command: calicoctl version
  register: calico_version_row

- name: others | master | postconfigure | Debug Message
  set_fact:
    calico_cluster_version: '{{ item.split(":") | map("trim") | list | reject("search","Cluster Version")|list | join }}'
  with_items: "{{ calico_version_row.stdout_lines|select('search','Cluster Version')|list }}"

- name: bootstrap | configure master | deploy calico deployment
  template:
    src: templates/calico/calico.yaml.j2
    dest: /etc/kubernetes/calico.yaml
    owner: root
    group: root
    mode: 0600

- name: others | master | postconfigure | Debug show calico version
  debug:
    var: calico_cluster_version

- name: bootstrap | configure master | apply calico deployment
  k8s:
    kubeconfig: /etc/kubernetes/admin.conf
    src: /etc/kubernetes/calico.yaml
  when: calico_cluster_version != calicoctl_version

- name: "bootstrap | configure master | check if almost one control plane is updated to the desired version ( v{{ k8s_version }} )"
  shell: "python3 {{ role_path }}/files/scripts/vercheck.py '{{ cluster_name }}' 'v{{ k8s_version }}'"
  register: upgrade_check_script

- name: bootstrap | configure master | register control plane status output
  copy:
    content: "{{ upgrade_check_script.stdout }}"
    dest: /etc/kubernetes/cpversion_check
    owner: root
    group: root
    mode: 0600

- name: bootstrap | configure master | start the upgrade if no control planes are updated
  import_tasks: others/master/postconfigure-upgrade.yaml
  when: "{{ upgrade_check_script.stdout }} == 'False'" 