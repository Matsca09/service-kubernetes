---
- name: pre-upgrade | disable CSIMigration in featureGates
  blockinfile:
    path: /var/lib/kubelet/config.yaml
    block: |
      featureGates:
        CSIMigration: false

- name: pre-upgrade | align etcd version
  lineinfile:
    path: /etc/kubernetes/manifests/etcd.yaml
    regexp: "    image: k8s.gcr.io/etcd:3.3.17-0"
    line: "    image: k8s.gcr.io/etcd:3.3.15-0"

- name: pre-upgrade | restart Kubelet
  service:
    name: kubelet
    state: restarted

- name: pre-upgrade | wait for the kubelet to return active
  uri:
    url: https://127.0.0.1:10250/healthz
    client_cert: /etc/kubernetes/pki/apiserver-kubelet-client.crt
    client_key: /etc/kubernetes/pki/apiserver-kubelet-client.key
    validate_certs: no
  register: kubelet_http_check
  retries: 100
  delay: 5
  until: kubelet_http_check.status == 200
  failed_when: kubelet_http_check.status != 200

- name: pre-upgrade | wait for etcd to return active
  uri:
    url: http://127.0.0.1:2381/health
  register: etcd_http_check
  retries: 100
  delay: 5
  until: etcd_http_check.status == 200
  failed_when: etcd_http_check.status != 200

- name: pre-upgrade | wait for node to be Ready in API
  k8s:
    kubeconfig: /etc/kubernetes/admin.conf
    api_version: v1
    kind: Node
    name: "{{ ansible_hostname }}"
  register: node_info
  retries: 100
  delay: 5
  until: (node_info.result.status | json_query('conditions[?reason==`KubeletReady`]') | default([{'status':'Unknown'}],true) | json_query('[*].status') | first | string) == "True"
  failed_when: (node_info.result.status | json_query('conditions[?reason==`KubeletReady`]') | default([{'status':'Unknown'}],true) | json_query('[*].status') | first | string) != "True"
